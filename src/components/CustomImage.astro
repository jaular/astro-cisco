---
import { Picture } from "@astrojs/image/components";
import { getPlaiceholder } from "plaiceholder";

type Props = {
  src: string;
  title: string;
  alt: string;
  loading?: boolean;
};

const { src, title, alt, loading } = Astro.props;
const loadingAttribute = loading ? "eager" : "lazy";

const getRemoteImageWithPlaiceholder = async (src: string) => {
  const buffer = await fetch(src).then(async (res) =>
    Buffer.from(await res.arrayBuffer())
  );

  const {
    metadata: { height, width },
    ...plaiceholder
  } = await getPlaiceholder(buffer, { size: 10 });

  return { ...plaiceholder, img: { src, height, width } };
};

const { svg, img } = await getRemoteImageWithPlaiceholder(src);
const [Svg, svgProps, svgChildren] = svg;

// https://docs.astro.build/en/guides/images/#examples-1
//  https://github.com/joe-bell/plaiceholder/blob/main/examples/astro/src/pages/svg/single.astro
---

<div class="aspect-video rounded relative block overflow-hidden">
  <Svg
    {...svgProps}
    style={{ ...svgProps.style }}
    class="absolute inset-0 w-full h-full blur-2xl z-[-1]"
  >
    {
      svgChildren.map((child) => {
        const [Path, pathProps] = child;
        return <Path {...pathProps} />;
      })
    }
  </Svg>
  <Picture
    {...img}
    background="white"
    class="w-full h-full object-cover"
    src={src}
    title={title}
    widths={[200, 400, 600, 720, 1024]}
    sizes="(max-width: 1024px) 100vw, 1024px"
    aspectRatio="16:9"
    format="avif"
    alt={alt}
    loading={loadingAttribute}
  />
</div>
